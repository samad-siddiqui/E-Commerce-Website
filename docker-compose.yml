services:
  web:
    build: .
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_DB=new_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=samad123
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - db
      - redis

  db:
    image: postgres:13
    environment:
      - POSTGRES_DB=new_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=samad123
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d new_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  celery:
    build: .
    command: celery -A core worker --loglevel=info
    volumes:
      - .:/app
    environment:
      - POSTGRES_DB=new_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=samad123
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - db
      - redis

  celery-beat:
    build: .
    command: celery -A core beat --loglevel=info
    volumes:
      - .:/app
    environment:
      - POSTGRES_DB=new_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=samad123
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - celery

volumes:
  postgres_data:

# services:
#   web:
#     build: .
#     command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
#     volumes:
#       - .:/app
#     ports:
#       - "8000:8000"
#     env_file:
#       - .env
#     depends_on:
#       db:
#         condition: service_healthy
#       redis:
#         condition: service_started

#   db:
#     image: postgres:13
#     env_file:
#       - .env
#     volumes:
#       - postgres_data:/var/lib/postgresql/data/
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U sam -d new_db"]
#       interval: 5s
#       timeout: 5s
#       retries: 5

#   redis:
#     image: redis:latest
#     ports:
#       - "6379:6379"

#   celery:
#     build: .
#     command: celery -A core worker --loglevel=info
#     volumes:
#       - .:/app
#     env_file:
#       - .env
#     depends_on:
#       db:
#         condition: service_healthy
#       redis:
#         condition: service_started

#   celery-beat:
#     build: .
#     command: celery -A core beat --loglevel=info
#     volumes:
#       - .:/app
#     env_file:
#       - .env
#     depends_on:
#       celery:
#         condition: service_started


# volumes:
#   postgres_data:
